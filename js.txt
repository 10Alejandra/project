const casosRecuperados = document.querySelector(".casos-recuperados-count");
const casosFellecidos = document.querySelector(".casos-fallecidos-count");
const casosNa = document.querySelector(".casos-na-count");
const ciudades = document.querySelector("#ciudades");
const tiposRecuperacion = document.querySelector("#tipo-recuperacion");
const tablapacientes = document.querySelector(".tabla-pacientes");
const totalTamanio = document.querySelector("#total");
const pagina = document.querySelector("#pagina");
const siguiente = document.querySelector("#siguiente");
const anterior = document.querySelector("#anterior");



let listaciudades = [];
let listaTiposRecuperacion = [];
let listaPacientes = [];

let paginacion = {
  tamanio: 10,
  total: 0,
  pagina: 1
}
const filtrosBusqueda = {
  ciudad: '',
  tipoRecuperacion: ''
};

function actualizarCasos(pacientes){

  let cantidadCasosRecuperados = 0;
  let cantidadCasosFallecidos = 0;
  let cantidadCasosNa = 0;

  pacientes.forEach(paciente => {
    if(paciente.recuperado === "Recuperado"){
      cantidadCasosRecuperados ++;
    }else if(paciente.recuperado === "Fallecido"){
      cantidadCasosFallecidos ++;
    }else{
      cantidadCasosNa ++ ;
    }
    
  });
  casosRecuperados.innerHTML = cantidadCasosRecuperados;
  casosFellecidos.innerHTML = cantidadCasosFallecidos;
  casosNa.innerHTML = cantidadCasosNa;
}

function obtenerDatosSelect(pacientes){
  pacientes.forEach(paciente => {
    const {ciudad_municipio_nom:ciudad, tipo_recuperacion:tipoRecuperacion } = paciente;
    if (!listaciudades.includes(ciudad) && ciudad){
      listaciudades.push(ciudad);
    }

    if(!listaTiposRecuperacion.includes(tipoRecuperacion) && tipoRecuperacion){
      listaTiposRecuperacion.push(tipoRecuperacion)
    }
    
  });
  cargarSelect(listaciudades, ciudades);
  cargarSelect(listaTiposRecuperacion, tiposRecuperacion);
}

function cargarSelect(lista, elementHTML){
  lista.sort();
  let opciones = "";
  lista.forEach(valor => {

    opciones += `<option value="${valor}" > ${valor}</option>`
    
  });

  elementHTML.insertAdjacentHTML("beforeend", opciones);
}
function filtrarPacientes(){
  const data = listaPacientes
    .filter(filtrarPorCiudad)
    .filter(filtrarPorTipoRecuperacion);
  return data;
}

function filtrarPorCiudad (paciente) {
  if(filtrosBusqueda.ciudad){
    return paciente.ciudad_municipio_nom === filtrosBusqueda.ciudad;
  }
  return paciente;
}

function filtrarPorTipoRecuperacion (paciente) {
  if(filtrosBusqueda.tipoRecuperacion){
    return paciente.tipo_recuperacion === filtrosBusqueda.tipoRecuperacion;
  }
  return paciente;

}

function mostrarTabla(){
  let filas = `
    <tr id="encabezados">${document.querySelector("#encabezados").innerHTML}</tr>   
  `;

  const pacientesAux = filtrarPacientes();
  actualizarCasos(pacientesAux);
  const {tamanio, pagina} = paginacion;
  paginacion.total = Math.ceil(pacientesAux.length / tamanio);
  totalTamanio.innerHTML = paginacion.total;
  const length = tamanio * pagina > pacientesAux.length ? pacientesAux.length: tamanio * pagina;

  for (let index = (pagina-1)*tamanio; index < length; index++) {
    const {
      ciudad_municipio_nom:ciudad,
      edad,
      sexo,
      recuperado,
      tipo_recuperacion: tipoRecuperacion,
      fecha_inicio_sintomas: fechaInicioSintomas,
      fecha_diagnostico: fechaDiagnostico } = pacientesAux[index];
    
    let fecha1 = new Date(fechaInicioSintomas);
    let fecha2 = new Date(fechaDiagnostico);
    let diferencia = (Math.abs(fecha2 - fecha1 )) / (1000 * 3600 * 24);
    let datoFechaInicioSintomas = fecha1.toISOString().split("T")[0];
    let datoFechaDiagnostico = fecha2.toISOString().split("T")[0];
    const fila = `
      <tr>
        <td>${ciudad}</td>
        <td>${edad}</td>
        <td>${sexo}</td>
        <td>${recuperado}</td>
        <td>${tipoRecuperacion}</td>
        <td>${datoFechaInicioSintomas}</td>
        <td>${datoFechaDiagnostico}</td>
        <td>${diferencia} dias</td>
      </tr>
    `;

    filas += fila;
    
  }
  tablapacientes.innerHTML = filas;

}

//Eventos

ciudades.addEventListener('change', (e) => {
  paginacion.pagina = 1;
  anterior.disabled = true;
  pagina.innerHTML = paginacion.pagina;

  filtrosBusqueda.ciudad = e.target.value;  
  mostrarTabla();
});

tiposRecuperacion.addEventListener('change', (e) => {
  paginacion.pagina = 1;
  anterior.disabled = true;
  pagina.innerHTML = paginacion.pagina;

  filtrosBusqueda.tipoRecuperacion = e.target.value;
  mostrarTabla();
}); 

anterior.addEventListener('click', (e) =>{
  paginacion.pagina --;
  
  if(paginacion.pagina <=1){
    anterior.disabled = true;
  }
  siguiente.disabled = false;
  pagina.innerHTML = paginacion.pagina;
  mostrarTabla();

});

siguiente.addEventListener('click', (e)=>{
  paginacion.pagina ++;

  if(paginacion.pagina >= paginacion.total){
    siguiente.disabled = true;
  }
  anterior.disabled = false;
  pagina.innerHTML = paginacion.pagina;
  mostrarTabla();
});

fetch("https://www.datos.gov.co/resource/gt2j-8ykr.json")
  .then( response => response.json())
  .then( pacientes => {
    //Entero mas proximo
    paginacion.total = Math.ceil(pacientes.length / paginacion.tamanio);
    listaPacientes = pacientes;
    actualizarCasos(pacientes);
    obtenerDatosSelect(pacientes);   
    totalTamanio.innerHTML = paginacion.total;
    mostrarTabla();
    
  })
  .catch( error => console.log("Error al cargar los datos", error));



//CSS layaut

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

.header {
  grid-area: header;
  background-color: rgb(225, 231, 231);
}

.main-nav {
  grid-area: nav;
  background-color: rgb(225, 231, 231);
}

.widgets {
  grid-area: widgets;
  /* background-color: brown; */
}

.filters {
  grid-area: filters;
  /* background-color: chartreuse; */
}

.content {
  grid-area: content;
  /* background-color: deeppink; */
}

.wrapper {
  display: grid;
  grid-template-areas: 
  "header"
  "nav"
  "widgets"
  "filters"
  "content";
}

@media (min-width: 500px) {
  .wrapper {
    grid-template-columns: 1fr 3fr;
    grid-template-areas: 
    "header  header"
    "nav     nav"
    "widgets widgets"
    "filters content";
  }
}

//style css


.banner{
  width: 100%;
  height: 350px;
  object-fit: cover;
}

nav ul {  
  list-style: none;
  display: flex;

}

nav ul li a, span {
  text-decoration: none;
  color: black;
  display: block;
  padding: 10px;
  align-items: center;
}
a:hover {
  background-color: rgb(140, 149, 157);
}

/* widgets*/
.widgets {
  display: flex;
  flex-direction: column;
  align-items: center;
  
}

.casos-recuperados {
  background-color: rgb(69, 55, 85) ;
}

.casos-fallecidos {
  background-color: rgb(142, 31, 62) ;
}

.casos-na {
  background-color: rgb(60, 59, 61) ;
}

.casos-recuperados,
.casos-fallecidos,
.casos-na {
  display: flex;
  flex-direction: column;
  align-items: center;
  border-radius: 15px;
  padding: 15px;
  margin: 10px;
  width: 150px;
  color: white;

}

.casos-recuperados-img,
.casos-fallecidos-img,
.casos-na-img {
  width: 70px;  
}

/* filters*/
.filters {
  padding: 10px;
}

select {
  display: flex;
  flex-direction: column;
  margin: 3px 0px;
  width: 100%;
  padding: 3px;
}

/*tabla*/
.content {
  overflow-x: auto;
}

.tabla-pacientes{
  background-color:white;  
  color: black;
  width: 100%;
  text-align: center;
}

.table-header{
  background-color: black;
  color: white;
  width: 100%;
  padding: 2px 18px;
  align-items: center;  
}
.paginacion, 
.indicadores{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px;
}
.indicadores div {
  padding: 5px;
  width: 20px;
}
#anterior,
#siguiente {
    background-color: #008CBA;
    border: none;
    color: white;
    padding: 10px 15px;
    text-align: center;
    display: inline-block;
    font-size: 16px;
    margin: 0 10px;
}

#anterior:disabled,
#siguiente:disabled {
    background-color: #555555;
}

@media ( min-width: 500px) {
  .widgets {
    flex-direction: row;
    justify-content: space-around;
  }
}



//HTML

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="/css/layout.css">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <div class="wrapper">
    <header class="header">
      <img class="banner" src="/resources/img/imagen.png" alt="Imagen" >
    </header>

    <nav class="main-nav">
      <ul>
        <li>
          <span><b>COVID</b></span>
        </li>
        <li>
          <a href="#">Visualizacion datos</a>
        </li>
        <li>
          <a href="#">Nuevo registro</a>
        </li>
      </ul>
    </nav>
    <div class="widgets">
      <div class="casos-recuperados">
        <img class="casos-recuperados-img" src="/resources/icons/usuario.png" alt="User" >
        <p class="casos-recuperados-text">Casos recuperados</p>
        <p class="casos-recuperados-count"> 0 </p>
      </div>

      <div class="casos-fallecidos">
        <img class="casos-fallecidos-img" src="/resources/icons/usuario.png" alt="User" >
        <p class="casos-fallecidos-text">Casos fallecidos</p>
        <p class="casos-fallecidos-count"> 0 </p>
      </div>

      <div class="casos-na">
        <img class="casos-na-img" src="/resources/icons/usuario.png" alt="User" >
        <p class="casos-na-text">Casos N/A</p>
        <p class="casos-na-count"> 0 </p>
      </div>

    </div>
    <div class="filters">
      <label for="ciudades"> Ciudades</label>
      <select name="select" id="ciudades"> 
        <option value="" selected>Selecciones una opción</option>
      </select>
      <label for="tipo-recuperacion" class="tipo-recuperacion">Tipo recuperación</label>
      <select name="select" id="tipo-recuperacion">
        <option value="" selected>Selecciones una opción</option>
      </select>    

    </div>

    <div class="content" > 
      <table class="tabla-pacientes" >
        <tr id="encabezados">
          <th class="table-header">Ciudad</th>
          <th class="table-header">Edad</th>
          <th class="table-header">Sexo</th>
          <th class="table-header">Reparado</th>
          <th class="table-header">Tipo reparación</th> 
          <th class="table-header">Fecha inicio</th>  
          <th class="table-header">Fecha diagnostico</th>
          <th class="table-header">Tiempo diagnostico</th>  
        </tr>
      </table>
      <div class="paginacion">
        <button id="anterior" disabled>Anterior</button>
        <div class="indicadores">
          <div id = "pagina">1</div>
          <div>de</div>
          <div id = "total">0</div>
        </div>
        <button id = "siguiente">siguiente</button>
      </div>
    </div>

    

  </div>
  <script src="/js/main.js"></script>

</body>
</html>

